name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-push-to-dockerhub:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/upbit-auto-bot:latest
          no-cache: true # Force a fresh build

  deploy-to-ec2:
    runs-on: ubuntu-latest
    needs: build-and-push-to-dockerhub
    steps:
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ec2-user # Amazon Linux의 기본 사용자 이름
          key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
          script: |
            # Docker Hub에서 최신 이미지 pull
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/upbit-auto-bot:latest

            # 기존 컨테이너 중지 및 삭제 (실행 중인 경우)
            docker stop upbit-auto-bot-container || true
            docker rm upbit-auto-bot-container || true

            # 최신 이미지로 새 컨테이너 실행
            # UPBIT_ACCESS_KEY와 UPBIT_SECRET_KEY는 GitHub Secrets에서 주입
            # main.py의 CMD 인자는 필요에 따라 조정하세요.
            # 현재는 이전 대화에서 제시된 그리드 트레이딩 예시 인자를 사용합니다.
            docker run -d --name upbit-auto-bot-container \
              -e UPBIT_ACCESS_KEY="${{ secrets.UPBIT_ACCESS_KEY }}" \
              -e UPBIT_SECRET_KEY="${{ secrets.UPBIT_SECRET_KEY }}" \
              ${{ secrets.DOCKERHUB_USERNAME }}/upbit-auto-bot:latest \
              python main.py --mode grid --ticker BTC/KRW --lower-price 30000000 --upper-price 40000000 --grid-count 5 --order-amount-krw 10000
