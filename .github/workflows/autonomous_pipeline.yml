# .github/workflows/autonomous_pipeline.yml
name: Rule-Based Strategy CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  # 1. LINT JOB: 코드 품질 검사
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install linter
        run: pip install ruff
      - name: Run linter
        run: ruff check .

  # 2. BACKTEST JOB: 전략 성능 검증
  backtest:
    runs-on: ubuntu-latest
    needs: lint
    outputs:
      run_deploy: ${{ steps.quality_gate.outputs.run_deploy }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run Backtest for last 3 months
        id: backtest_run
        run: |
          # 최근 3개월에 대한 백테스트 실행 및 결과를 로그 파일에 저장
          python commander_backtester.py --start-date $(date -d '3 months ago' +%Y-%m-%d) --end-date $(date +%Y-%m-%d) > backtest_results.log
          # 로그 파일 내용 출력
          cat backtest_results.log
          # 최종 샤프 지수 값 추출
          SHARPE_VALUE=$(grep 'FINAL_SHARPE=' backtest_results.log | cut -d '=' -f 2)
          echo "EXTRACTED_SHARPE=$SHARPE_VALUE" >> $GITHUB_ENV

      - name: Performance Quality Gate
        id: quality_gate
        run: |
          echo "Recent 3-month Sharpe Ratio is: ${{ env.EXTRACTED_SHARPE }}"
          # 샤프 지수가 0보다 클 경우에만 배포 진행
          if (( $(echo "${{ env.EXTRACTED_SHARPE }} > 0" | bc -l) )); then
            echo "✅ Sharpe Ratio is positive. Proceeding to deployment."
            echo "run_deploy=true" >> $GITHUB_OUTPUT
          else
            echo "❌ Sharpe Ratio is not positive. Deployment will be skipped."
            echo "run_deploy=false" >> $GITHUB_OUTPUT
          fi

  # 3. DEPLOY JOB: EC2에 소스코드 배포
  deploy:
    runs-on: ubuntu-latest
    needs: backtest
    if: needs.backtest.outputs.run_deploy == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Deploy source code to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
          source: "."
          target: "/home/ec2-user/upbit_auto_bot"
          strip_components: 1
      - name: Trigger EC2 Deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
          script: |
            echo "Deployment trigger sent to EC2."
            # 예시: /home/ec2-user/upbit_auto_bot/scripts/deploy.sh 실행
            # 이 스크립트는 EC2 서버 내에서 봇을 재시작하는 역할을 담당해야 합니다.
